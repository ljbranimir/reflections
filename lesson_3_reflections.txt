Q: When would you want to create a remote repository rather than keeping all
your work local?

A: In case I'm in collaboration with other people on the same project/repository.
Also, if the project is important it's good to have a backup which is remote.

Q: Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

A: Because we want to have a full control over the current work/development, and
one wouldn't want that project files change and potentially causes some conflicts
in the middle of important work. So full control and manual pull is a better
solution IMHO.

Q: Describe the differences between forks, clones, and branches. When would you
use one instead of another?

A: Forks are similar as cloning but on GitHub. It represents the action of
copying a remote repository to another repository which can afterward be changed
independently. Clones are done from GitHub to local machine, and from local to
local. Branchin is done localy, it keeps the log history and it can be merged
anytime needed to another branch or master. So, these three actions are similar
in a way but performed at another levels and locations.

Q: What is the benefit of having a copy of the last known state of the remote
stored locally?

A: The benefit is that we will have all the recent changes and updates all the
participans in the project did. Also, that way we'll have all the conflicts
noticed and resolved in time.

Q: How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

A: It is impossible now for me to imagine any sort of collaboration without any
of the version control systems. Nevertheless, I can imagine the collaboration
without GitHub where we would just need some server instead, but version system
is a must, if not Git than something else.

Q: When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?

A: In a collaboration with others one would make a separate branch localy in
order to afterwards have its work reviewed after making a pull request. In the
end all this if fine can be merged to the master. This is a bit less straight
forward method, slower, but more reliable.
